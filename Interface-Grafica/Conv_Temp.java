/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Interface_Gr√°fica;

/**
 *
 * @author 03721174062
 */
public class Conv_Temp extends javax.swing.JFrame {

    /**
     * Creates new form Conv_Temp
     */
    public Conv_Temp() {
        initComponents();
    }
    
    private static int celsiusParaKelvin(int tCelsius) {
        return tCelsius + 273;
    }
    
    private static int kelvinParaCelsius(int tKelvin) {
        return tKelvin - 273;
    }    
    
    private static int fahrenheitParaCelsius(int tFahr) {
        double temp = (tFahr - 32.0) / 9 * 5; 
        return (int) temp;
    }
    
    private static int celsiusParaFahrenheit(int tCelsius) {
        double temp = (tCelsius / 5.0) * 9 + 32; 
        return (int) temp;
    }
    
    private static int kelvinParaFahrenheit(int tKelvin) {
        return celsiusParaFahrenheit(kelvinParaCelsius(tKelvin));
    }
    
    private static int fahrenheitParaKelvin(int tFahr) {
        return celsiusParaKelvin(fahrenheitParaCelsius(tFahr));
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoOrigem = new javax.swing.ButtonGroup();
        grupoDestino = new javax.swing.ButtonGroup();
        pDestino = new javax.swing.JPanel();
        rbCelsiusD = new javax.swing.JRadioButton();
        rbKelvinD = new javax.swing.JRadioButton();
        rbFahrD = new javax.swing.JRadioButton();
        sliOrigem = new javax.swing.JSlider();
        pOrigem = new javax.swing.JPanel();
        rbCelsiusO = new javax.swing.JRadioButton();
        rbKelvinO = new javax.swing.JRadioButton();
        rbFahrO = new javax.swing.JRadioButton();
        botReiniciar = new javax.swing.JButton();
        botSair = new javax.swing.JButton();
        LConversao = new javax.swing.JLabel();
        LOrigem = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setFocusTraversalPolicyProvider(true);

        pDestino.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Para:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monocraft", 0, 14))); // NOI18N
        pDestino.setOpaque(false);

        grupoDestino.add(rbCelsiusD);
        rbCelsiusD.setFont(new java.awt.Font("Monocraft", 0, 12)); // NOI18N
        rbCelsiusD.setText("Celsius");
        rbCelsiusD.setEnabled(false);

        grupoDestino.add(rbKelvinD);
        rbKelvinD.setFont(new java.awt.Font("Monocraft", 0, 12)); // NOI18N
        rbKelvinD.setSelected(true);
        rbKelvinD.setText("Kelvin");

        grupoDestino.add(rbFahrD);
        rbFahrD.setFont(new java.awt.Font("Monocraft", 0, 12)); // NOI18N
        rbFahrD.setText("Fahrenheit");

        javax.swing.GroupLayout pDestinoLayout = new javax.swing.GroupLayout(pDestino);
        pDestino.setLayout(pDestinoLayout);
        pDestinoLayout.setHorizontalGroup(
            pDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDestinoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbCelsiusD)
                    .addComponent(rbKelvinD)
                    .addComponent(rbFahrD))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pDestinoLayout.setVerticalGroup(
            pDestinoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pDestinoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbCelsiusD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbKelvinD)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbFahrD)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        sliOrigem.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        sliOrigem.setMajorTickSpacing(10);
        sliOrigem.setMinorTickSpacing(2);
        sliOrigem.setOrientation(javax.swing.JSlider.VERTICAL);
        sliOrigem.setPaintLabels(true);
        sliOrigem.setPaintTicks(true);
        sliOrigem.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 10, 1, 1));
        sliOrigem.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                sliOrigemMouseDragged(evt);
            }
        });

        pOrigem.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "De:", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Monocraft", 0, 14))); // NOI18N
        pOrigem.setOpaque(false);

        grupoOrigem.add(rbCelsiusO);
        rbCelsiusO.setFont(new java.awt.Font("Monocraft", 0, 12)); // NOI18N
        rbCelsiusO.setSelected(true);
        rbCelsiusO.setText("Celsius");
        rbCelsiusO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCelsiusOActionPerformed(evt);
            }
        });

        grupoOrigem.add(rbKelvinO);
        rbKelvinO.setFont(new java.awt.Font("Monocraft", 0, 12)); // NOI18N
        rbKelvinO.setText("Kelvin");
        rbKelvinO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbKelvinOActionPerformed(evt);
            }
        });

        grupoOrigem.add(rbFahrO);
        rbFahrO.setFont(new java.awt.Font("Monocraft", 0, 12)); // NOI18N
        rbFahrO.setText("Fahrenheit");
        rbFahrO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbFahrOActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pOrigemLayout = new javax.swing.GroupLayout(pOrigem);
        pOrigem.setLayout(pOrigemLayout);
        pOrigemLayout.setHorizontalGroup(
            pOrigemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pOrigemLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pOrigemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbCelsiusO)
                    .addComponent(rbKelvinO)
                    .addComponent(rbFahrO))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pOrigemLayout.setVerticalGroup(
            pOrigemLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pOrigemLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbCelsiusO)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbKelvinO)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbFahrO)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        botReiniciar.setFont(new java.awt.Font("Monocraft", 1, 14)); // NOI18N
        botReiniciar.setText("Reiniciar");
        botReiniciar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botReiniciarActionPerformed(evt);
            }
        });

        botSair.setFont(new java.awt.Font("Monocraft", 1, 14)); // NOI18N
        botSair.setText("Sair");
        botSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botSairActionPerformed(evt);
            }
        });

        LConversao.setFont(new java.awt.Font("Monocraft", 0, 12)); // NOI18N
        LConversao.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(186, 186, 186)));

        LOrigem.setFont(new java.awt.Font("Monocraft", 0, 12)); // NOI18N
        LOrigem.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(186, 186, 186)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(sliOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(LOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                        .addComponent(LConversao, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botReiniciar)
                        .addGap(34, 34, 34)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(botSair, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(10, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(sliOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 249, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(pDestino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(pOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(28, 28, 28)
                                    .addComponent(LConversao, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 92, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(botReiniciar, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(botSair, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(26, 26, 26)
                            .addComponent(LOrigem, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botSairActionPerformed
        System.exit(0);
    }//GEN-LAST:event_botSairActionPerformed

    private void sliOrigemMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sliOrigemMouseDragged
        int valor = sliOrigem.getValue();
        String texto = String.valueOf(valor);
        LOrigem.setText(texto);
        int valorConv;
        if( rbCelsiusO.isSelected()) {
            if(rbKelvinD.isSelected()) {
                valorConv = celsiusParaKelvin(valor);
            } else {
                valorConv = celsiusParaFahrenheit(valor);
            }
        } else {
            if(rbKelvinO.isSelected()) {
                if(rbCelsiusD.isSelected()) {
                    valorConv = kelvinParaCelsius(valor);
                } else {
                    valorConv = kelvinParaFahrenheit(valor);
                }
            } else { // selecionado o Fahr
                if(rbCelsiusD.isSelected()) {
                    valorConv = fahrenheitParaCelsius(valor);
                } else {
                    valorConv = fahrenheitParaKelvin(valor);
                }
            }
        }
        String textoConv = String.valueOf(valorConv);
        LConversao.setText(textoConv);
    }//GEN-LAST:event_sliOrigemMouseDragged

    
    private void rbKelvinOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbKelvinOActionPerformed
        int valor = sliOrigem.getValue();
        int maxAtual = sliOrigem.getMaximum();
        int novoValor;
        if (maxAtual == 100) { // Estava em Celsius
            novoValor = celsiusParaKelvin(valor);
            rbCelsiusD.setEnabled(true);
            rbCelsiusD.setSelected(true);
        } else { // Estava em Fahrenheit
            novoValor = fahrenheitParaKelvin(valor);
            rbFahrD.setEnabled(true);
            rbFahrD.setSelected(true);
        }
        rbKelvinD.setEnabled(false);
        
        
        // valor =+ 273;
      
        
        sliOrigem.setMaximum(373);
        sliOrigem.setMinimum(273);
        sliOrigem.setValue(novoValor);
        
        String texto = String.valueOf(novoValor);
        LOrigem.setText(texto);
        
    }//GEN-LAST:event_rbKelvinOActionPerformed

    private void rbCelsiusOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCelsiusOActionPerformed
        int valor = sliOrigem.getValue();
        int maxAtual = sliOrigem.getMaximum();
        int novoValor;
        if (maxAtual == 373) { // Estava em Kelvin
            novoValor = kelvinParaCelsius(valor);
            rbKelvinD.setEnabled(true);
            rbKelvinD.setSelected(true);
        } else { // Estava em Fahrenheit
            novoValor = fahrenheitParaCelsius(valor);
            rbFahrD.setEnabled(true);
            rbFahrD.setSelected(true);
        }
        rbCelsiusD.setEnabled(false);
        
        sliOrigem.setMaximum(100);
        sliOrigem.setMinimum(0);
        sliOrigem.setValue(novoValor);
        
        String texto = String.valueOf(novoValor);
        LOrigem.setText(texto);
    }//GEN-LAST:event_rbCelsiusOActionPerformed

    private void rbFahrOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbFahrOActionPerformed
        int valor = sliOrigem.getValue();
        int maxAtual = sliOrigem.getMaximum();
        int novoValor;
        if (maxAtual == 100) { // Estava em Celsius
            novoValor = celsiusParaFahrenheit(valor);
            rbCelsiusD.setEnabled(true);
            rbCelsiusD.setSelected(true);
        } else { // Estava em Kelvin
            novoValor = fahrenheitParaCelsius(valor);
            rbKelvinD.setEnabled(true);
            rbKelvinD.setSelected(true);
        }
        rbFahrD.setEnabled(false);
        novoValor = 0;
        sliOrigem.setMaximum(212);
        sliOrigem.setMinimum(32);
        sliOrigem.setValue(novoValor);
        
        String texto = String.valueOf(novoValor);
        LOrigem.setText(texto);
    }//GEN-LAST:event_rbFahrOActionPerformed

    private void botReiniciarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botReiniciarActionPerformed
        int valor = 0;
        int maxAtual = sliOrigem.getMaximum();
        int novoValor;
        if (maxAtual == 373) { // Estava em Kelvin
            novoValor = kelvinParaCelsius(valor);
            rbKelvinD.setEnabled(true);
            rbKelvinD.setSelected(true);
        } else { // Estava em Fahrenheit
            novoValor = fahrenheitParaCelsius(valor);
            rbFahrD.setEnabled(true);
            rbFahrD.setSelected(true);
        }
        rbCelsiusO.setSelected(true);
        rbCelsiusD.setEnabled(false);
        
        sliOrigem.setMaximum(100);
        sliOrigem.setMinimum(0);
        

        
    }//GEN-LAST:event_botReiniciarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Conv_Temp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Conv_Temp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Conv_Temp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Conv_Temp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Conv_Temp().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel LConversao;
    private javax.swing.JLabel LOrigem;
    private javax.swing.JButton botReiniciar;
    private javax.swing.JButton botSair;
    private javax.swing.ButtonGroup grupoDestino;
    private javax.swing.ButtonGroup grupoOrigem;
    private javax.swing.JPanel pDestino;
    private javax.swing.JPanel pOrigem;
    private javax.swing.JRadioButton rbCelsiusD;
    private javax.swing.JRadioButton rbCelsiusO;
    private javax.swing.JRadioButton rbFahrD;
    private javax.swing.JRadioButton rbFahrO;
    private javax.swing.JRadioButton rbKelvinD;
    private javax.swing.JRadioButton rbKelvinO;
    private javax.swing.JSlider sliOrigem;
    // End of variables declaration//GEN-END:variables
}